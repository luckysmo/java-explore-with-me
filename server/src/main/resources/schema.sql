-- DROP TABLE IF EXISTS category CASCADE;
-- DROP TABLE IF EXISTS users CASCADE;
-- DROP TABLE IF EXISTS events CASCADE;
-- DROP TABLE IF EXISTS compilation CASCADE;
-- DROP TABLE IF EXISTS compilation_events CASCADE;
-- DROP TABLE IF EXISTS participation_request CASCADE;
-- DROP TABLE IF EXISTS likes CASCADE;

CREATE TABLE IF NOT EXISTS category
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    name VARCHAR(250)                            NOT NULL,
--     CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT UQ_category_Name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    name  VARCHAR(250)                            NOT NULL,
    email VARCHAR(150)                            NOT NULL,
    like_count INTEGER,
    dislike_count INTEGER,
    CONSTRAINT pk_user PRIMARY KEY (id) ,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title              VARCHAR(120)                            NOT NULL,
    annotation         VARCHAR(2000),
    description        VARCHAR(7000),
    created_on         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    paid               BOOLEAN,
    request_moderation BOOLEAN,
    state              VARCHAR(100)                            NOT NULL,
    like_count         BIGINT NOT NULL,
    dislike_count      BIGINT NOT NULL,
    participant_limit  INT,
    category_id        BIGINT,
    initiator          BIGINT                                  NOT NULL,
    longitude          REAL,
    latitude           REAL,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT FK_EVENT_ON_OWNER FOREIGN KEY (initiator) REFERENCES users (id),
    CONSTRAINT FK_EVENT_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES category (id)
);

CREATE TABLE IF NOT EXISTS compilation
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title  VARCHAR(250)                            NOT NULL,
    pinned BOOLEAN,
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    CONSTRAINT pk_compilation_events PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT FK_CE_ON_COMPILATION FOREIGN KEY (compilation_id) REFERENCES compilation (id),
    CONSTRAINT FK_CE_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS participation_request
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    event     BIGINT                                  NOT NULL,
    requester BIGINT                                  NOT NULL,
    status    VARCHAR(100)                            NOT NULL,
    CONSTRAINT pk_participation_request PRIMARY KEY (id),
    CONSTRAINT FK_PR_ON_EVENT FOREIGN KEY (event) REFERENCES events (id),
    CONSTRAINT FK_PR_ON_USER FOREIGN KEY (requester) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS likes (
                                     id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                     user_id    BIGINT NOT NULL,
                                     event_id    BIGINT NOT NULL,
                                     is_like     BOOLEAN NOT NULL,
                                     CONSTRAINT  pk_likes PRIMARY KEY (id),
                                     CONSTRAINT  fk_likes_on_events FOREIGN KEY (event_id) REFERENCES events(id),
                                     CONSTRAINT  unique_like UNIQUE (event_id, id)
);

